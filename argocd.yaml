config:
  timeout.reconciliation: 60s

redis:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 1
      memory: 1Gi
  tolerations:
    - key: "poolType"
      operator: "Equal"
      value: "system"
      effect: "NoSchedule"

controller:
  resources:
    requests:
      cpu: 300m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 2Gi
  enableStatefulSet: true
  replicas: 2
  metrics:
    enabled: true
  env:
    - name: "ARGOCD_CONTROLLER_REPLICAS"
      value: "2"
    - name: "ARGOCD_K8S_CLIENT_QPS"
      value: "{qps}"
    - name: "ARGOCD_K8S_CLIENT_BURST"
      value: "{burst}"


dex:
  metrics:
    enabled: true

repoServer:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 1
      memory: 1Gi
  metrics:
    enabled: true

server:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 1
      memory: 1Gi
  configEnabled: true
  metrics:
    enabled: true
  config:
    application.instanceLabelKey: argocd.argoproj.io/instance
    url: https://argocd.example.com

  additionalApplications:
    - name: prometheus
      namespace: argocd
      project: default
      source:
        repoURL: https://github.com/fer1592/argocd-demo.git
        targetRevision: 'main'
        path: prometheus
        directory:
          recurse: true
      destination:
        server: https://kubernetes.default.svc
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
    - name: dev
      namespace: argocd
      project: default
      source:
        repoURL: https://github.com/fer1592/argocd-demo.git
        targetRevision: 'main'
        path: dev
        directory:
          recurse: true
      destination:
        server: https://kubernetes.default.svc
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
